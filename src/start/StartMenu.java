/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package start;

import editor.TrackEditor;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FilenameFilter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.lwjgl.LWJGLException;
import play.Game;
import play.FinTrack;
import play.ReachGoalExc;

/**
 *
 * @author VAIO
 */
public class StartMenu extends javax.swing.JFrame {

    /**
     * Creates new form StartMenu
     */
    public StartMenu() {
        initComponents();
        loadNew.add(newTrack);
        loadNew.add(loadTrack);
//        Path path = Paths.get("tracks");
//        int count = path.getNameCount();
//        for(int i=0; i<count; i++) {
//            if(path.)
//        }
        //load available tracks and set "setTrack" & "setTrack2"
        File dir = new File("tracks");
    	File[] files =
            dir.listFiles(new FilenameFilter() {
                    @Override
    	        public boolean accept(File dir, String filename)
    	            { return filename.endsWith(".carr"); }
            } );
		for (File file : files) {
			String fname = file.getName();
			int namesize = fname.length();
			setTrackP.addItem(fname.substring(0, namesize - 5));
			setTrackE.addItem(fname.substring(0, namesize - 5));
		}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loadNew = new javax.swing.ButtonGroup();
        saveDia = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        filenameF = new javax.swing.JTextField();
        saveB = new javax.swing.JButton();
        congratDia = new javax.swing.JDialog();
        congratL = new javax.swing.JLabel();
        winnerL = new javax.swing.JLabel();
        congratOk = new javax.swing.JButton();
        stabbedPain = new javax.swing.JTabbedPane();
        startGame = new javax.swing.JPanel();
        playL = new javax.swing.JButton();
        setHumans = new javax.swing.JSlider();
        humansL = new javax.swing.JLabel();
        humans_L = new javax.swing.JLabel();
        setAI = new javax.swing.JSlider();
        aiL = new javax.swing.JLabel();
        ai_L = new javax.swing.JLabel();
        setTrackP = new javax.swing.JComboBox();
        sepPlTr = new javax.swing.JSeparator();
        setLaps = new javax.swing.JSlider();
        selTrack_L = new javax.swing.JLabel();
        lapsL = new javax.swing.JLabel();
        laps_L = new javax.swing.JLabel();
        editTrack = new javax.swing.JPanel();
        startEditor = new javax.swing.JButton();
        newTrack = new javax.swing.JRadioButton();
        setWidth = new javax.swing.JSlider();
        setHeight = new javax.swing.JSlider();
        widthL = new javax.swing.JLabel();
        width_L = new javax.swing.JLabel();
        heightL = new javax.swing.JLabel();
        height_L = new javax.swing.JLabel();
        sepNewLoad = new javax.swing.JSeparator();
        loadTrack = new javax.swing.JRadioButton();
        setTrackE = new javax.swing.JComboBox();
        selTrack2_L = new javax.swing.JLabel();
        title_L = new javax.swing.JLabel();

        saveDia.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        saveDia.setTitle("Save Track");
        saveDia.setLocationByPlatform(true);
        saveDia.setMinimumSize(new java.awt.Dimension(300, 150));
        saveDia.setResizable(false);
        saveDia.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                saveDiaWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Save as");

        filenameF.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        filenameF.setText("newtrack");

        saveB.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        saveB.setText("Save");
        saveB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveBMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout saveDiaLayout = new javax.swing.GroupLayout(saveDia.getContentPane());
        saveDia.getContentPane().setLayout(saveDiaLayout);
        saveDiaLayout.setHorizontalGroup(
            saveDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveDiaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(saveDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(saveDiaLayout.createSequentialGroup()
                        .addComponent(filenameF, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saveB)))
                .addContainerGap())
        );
        saveDiaLayout.setVerticalGroup(
            saveDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveDiaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(saveDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filenameF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        congratDia.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        congratDia.setTitle("Congratulations");
        congratDia.setLocationByPlatform(true);
        congratDia.setMinimumSize(new java.awt.Dimension(400, 140));
        congratDia.setResizable(false);
        congratDia.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                congratDiaWindowClosed(evt);
            }
        });

        congratL.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        congratL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        congratL.setText("Congratulations!!");

        winnerL.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        winnerL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        winnerL.setText("The winner is someone!");

        congratOk.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        congratOk.setText("Okay");
        congratOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                congratOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout congratDiaLayout = new javax.swing.GroupLayout(congratDia.getContentPane());
        congratDia.getContentPane().setLayout(congratDiaLayout);
        congratDiaLayout.setHorizontalGroup(
            congratDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(congratDiaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(congratDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(congratL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(winnerL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(congratDiaLayout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(congratOk)
                .addContainerGap(167, Short.MAX_VALUE))
        );
        congratDiaLayout.setVerticalGroup(
            congratDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(congratDiaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(congratL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(winnerL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(congratOk)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setResizable(false);

        stabbedPain.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N

        playL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        playL.setText("Start");
        playL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playLMouseClicked(evt);
            }
        });

        setHumans.setMaximum(7);
        setHumans.setToolTipText("");
        setHumans.setValue(2);
        setHumans.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                setHumansStateChanged(evt);
            }
        });

        humansL.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        humansL.setText("2");

        humans_L.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        humans_L.setText("humans");

        setAI.setMaximum(7);
        setAI.setValue(0);
        setAI.setEnabled(false);
        setAI.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                setAIStateChanged(evt);
            }
        });

        aiL.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        aiL.setText("0");
        aiL.setEnabled(false);

        ai_L.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        ai_L.setText("AI");
        ai_L.setEnabled(false);

        setTrackP.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N

        setLaps.setMaximum(7);
        setLaps.setMinimum(1);
        setLaps.setValue(3);
        setLaps.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                setLapsStateChanged(evt);
            }
        });

        selTrack_L.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        selTrack_L.setText("Select track");

        lapsL.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        lapsL.setText("3");

        laps_L.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        laps_L.setText("laps");

        javax.swing.GroupLayout startGameLayout = new javax.swing.GroupLayout(startGame);
        startGame.setLayout(startGameLayout);
        startGameLayout.setHorizontalGroup(
            startGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startGameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(startGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sepPlTr, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(playL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(startGameLayout.createSequentialGroup()
                        .addGroup(startGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(setLaps, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(setTrackP, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(setHumans, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(setAI, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(startGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(startGameLayout.createSequentialGroup()
                                .addComponent(aiL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ai_L))
                            .addGroup(startGameLayout.createSequentialGroup()
                                .addComponent(humansL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(humans_L))
                            .addComponent(selTrack_L)
                            .addGroup(startGameLayout.createSequentialGroup()
                                .addComponent(lapsL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(laps_L)))
                        .addGap(0, 63, Short.MAX_VALUE)))
                .addContainerGap())
        );
        startGameLayout.setVerticalGroup(
            startGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, startGameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(startGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(setHumans, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, startGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(humansL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(humans_L)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(startGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(setAI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(startGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(aiL)
                        .addComponent(ai_L)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sepPlTr, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(startGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setTrackP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selTrack_L))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(startGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(setLaps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(startGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lapsL)
                        .addComponent(laps_L)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 249, Short.MAX_VALUE)
                .addComponent(playL, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        stabbedPain.addTab("Play", startGame);

        startEditor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        startEditor.setText("Generate");
        startEditor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startEditorMouseClicked(evt);
            }
        });

        newTrack.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        newTrack.setSelected(true);
        newTrack.setText("new track");
        newTrack.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                newTrackStateChanged(evt);
            }
        });

        setWidth.setMaximum(120);
        setWidth.setMinimum(20);
        setWidth.setValue(58);
        setWidth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                setWidthStateChanged(evt);
            }
        });

        setHeight.setMaximum(90);
        setHeight.setMinimum(10);
        setHeight.setValue(42);
        setHeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                setHeightStateChanged(evt);
            }
        });

        widthL.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        widthL.setText("58");

        width_L.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        width_L.setText("Width");

        heightL.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        heightL.setText("42");

        height_L.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        height_L.setText("Height");

        loadTrack.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        loadTrack.setText("load track");
        loadTrack.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                loadTrackStateChanged(evt);
            }
        });

        setTrackE.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        setTrackE.setEnabled(false);

        selTrack2_L.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        selTrack2_L.setText("Select track");
        selTrack2_L.setEnabled(false);

        javax.swing.GroupLayout editTrackLayout = new javax.swing.GroupLayout(editTrack);
        editTrack.setLayout(editTrackLayout);
        editTrackLayout.setHorizontalGroup(
            editTrackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editTrackLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editTrackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startEditor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sepNewLoad)
                    .addGroup(editTrackLayout.createSequentialGroup()
                        .addGroup(editTrackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newTrack)
                            .addGroup(editTrackLayout.createSequentialGroup()
                                .addComponent(setWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(widthL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(width_L))
                            .addGroup(editTrackLayout.createSequentialGroup()
                                .addComponent(setHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(heightL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(height_L))
                            .addGroup(editTrackLayout.createSequentialGroup()
                                .addComponent(setTrackE, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(selTrack2_L))
                            .addComponent(loadTrack))
                        .addGap(0, 63, Short.MAX_VALUE)))
                .addContainerGap())
        );
        editTrackLayout.setVerticalGroup(
            editTrackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editTrackLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newTrack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editTrackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(setWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(editTrackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(widthL)
                        .addComponent(width_L)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editTrackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(setHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(editTrackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(heightL)
                        .addComponent(height_L)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sepNewLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loadTrack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editTrackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setTrackE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selTrack2_L))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                .addComponent(startEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        stabbedPain.addTab("TrackEditor", editTrack);

        title_L.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        title_L.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_L.setText("CarRacing");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title_L, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(stabbedPain, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title_L)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stabbedPain))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startEditorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startEditorMouseClicked
        this.setVisible(false);

        if (newTrack.isSelected()) {
            try {
                track = new TrackEditor(setWidth.getValue(), setHeight.getValue()).edit();
                filenameF.setText("newtrack");
                saveDia.setVisible(true);
            } catch (LWJGLException ex) {
                Logger.getLogger(StartMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {//load track
            String filename = (String) setTrackE.getSelectedItem();
            String path = "tracks\\" + filename + ".carr";
            try {
                FileInputStream saveFile = new FileInputStream(path);
                ObjectInputStream restore = new ObjectInputStream(saveFile);
                track = (FinTrack) restore.readObject();
                restore.close();
                track = new TrackEditor(track).edit();
                refreshLoader();///why is that not enough?
                filenameF.setText(filename);
                saveDia.setVisible(true);
                //I am gonna change this!!! vvvvvvvvvvvvvv
            } catch (  ClassNotFoundException | LWJGLException ex) {} catch (FileNotFoundException ex) {
                Logger.getLogger(StartMenu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(StartMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_startEditorMouseClicked

    private void setHumansStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_setHumansStateChanged
        humansL.setText(Integer.toString(setHumans.getValue()));
    }//GEN-LAST:event_setHumansStateChanged

    private void setAIStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_setAIStateChanged
        aiL.setText(Integer.toString(setAI.getValue()));
    }//GEN-LAST:event_setAIStateChanged

    private void setLapsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_setLapsStateChanged
        lapsL.setText(Integer.toString(setLaps.getValue()));
    }//GEN-LAST:event_setLapsStateChanged

    private void setWidthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_setWidthStateChanged
        final int value = setWidth.getValue();
        if (value < 100)
            widthL.setText(" " + Integer.toString(value));
        else
            widthL.setText(Integer.toString(value));
    }//GEN-LAST:event_setWidthStateChanged

    private void setHeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_setHeightStateChanged
        final int value = setHeight.getValue();
        if (value < 100)
            heightL.setText(" " + Integer.toString(value));
        else
            heightL.setText(Integer.toString(value));
    }//GEN-LAST:event_setHeightStateChanged

    private void newTrackStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_newTrackStateChanged
        handleLoadNewChange();
    }//GEN-LAST:event_newTrackStateChanged

    private void loadTrackStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_loadTrackStateChanged
        handleLoadNewChange();
    }//GEN-LAST:event_loadTrackStateChanged

    private void playLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playLMouseClicked
        String path = "tracks\\" + setTrackP.getSelectedItem() + ".carr";
        try {
            FileInputStream saveFile = new FileInputStream(path);
            ObjectInputStream restore = new ObjectInputStream(saveFile);
            FinTrack track = (FinTrack) restore.readObject();
            restore.close();
            this.setVisible(false);
            try {
                new Game(setHumans.getValue(), setAI.getValue(),
                         track ,setLaps.getValue()).play();
            } catch (LWJGLException ex) {
                // I don't understand this ^^^vvv, IDE made it...maybe later
                Logger.getLogger(StartMenu.class.getName()).log(Level.SEVERE, null, ex);
			} catch (ReachGoalExc ex) {
				winnerL.setText("The winner is " + ex.getWinnerName() + "!");
			}
            //I am gonna change this!!! vvvvvvvvvvvvvv
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StartMenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (    IOException | ClassNotFoundException ex) {
            Logger.getLogger(StartMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        congratDia.setVisible(true);
    }//GEN-LAST:event_playLMouseClicked

    private void saveBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBMouseClicked
        try {

            String filename = filenameF.getText();
            if(!filename.endsWith(".carr"))
                filename = filename + ".carr";
            String path = "tracks\\" + filename;
            FileOutputStream saveFile = new FileOutputStream(path);
            try (ObjectOutputStream save = new ObjectOutputStream(saveFile)) {
                save.writeObject(track);
                save.close();
            }
        } catch (IOException ex) {
            Logger.getLogger(StartMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        saveDia.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_saveBMouseClicked

    private void saveDiaWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_saveDiaWindowClosed
        saveDia.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_saveDiaWindowClosed

    private void congratOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_congratOkActionPerformed
        congratDia.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_congratOkActionPerformed

    private void congratDiaWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_congratDiaWindowClosed
        congratDia.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_congratDiaWindowClosed

    private void handleLoadNewChange() {
        if (loadTrack.isSelected() && newTrack.isSelected())
            System.out.println("loadNew is buggy");

        boolean load = loadTrack.isSelected();

        startEditor.setText(load?"Load":"Generate");
        setWidth.setEnabled(!load);
        setHeight.setEnabled(!load);
        widthL.setEnabled(!load);
        heightL.setEnabled(!load);
        width_L.setEnabled(!load);
        height_L.setEnabled(!load);
        setTrackE.setEnabled(load);
        selTrack2_L.setEnabled(load);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new StartMenu().setVisible(true);
            }
        });
    }


    private FinTrack track;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aiL;
    private javax.swing.JLabel ai_L;
    private javax.swing.JDialog congratDia;
    private javax.swing.JLabel congratL;
    private javax.swing.JButton congratOk;
    private javax.swing.JPanel editTrack;
    private javax.swing.JTextField filenameF;
    private javax.swing.JLabel heightL;
    private javax.swing.JLabel height_L;
    private javax.swing.JLabel humansL;
    private javax.swing.JLabel humans_L;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lapsL;
    private javax.swing.JLabel laps_L;
    private javax.swing.ButtonGroup loadNew;
    private javax.swing.JRadioButton loadTrack;
    private javax.swing.JRadioButton newTrack;
    private javax.swing.JButton playL;
    private javax.swing.JButton saveB;
    private javax.swing.JDialog saveDia;
    private javax.swing.JLabel selTrack2_L;
    private javax.swing.JLabel selTrack_L;
    private javax.swing.JSeparator sepNewLoad;
    private javax.swing.JSeparator sepPlTr;
    private javax.swing.JSlider setAI;
    private javax.swing.JSlider setHeight;
    private javax.swing.JSlider setHumans;
    private javax.swing.JSlider setLaps;
    private javax.swing.JComboBox setTrackE;
    private javax.swing.JComboBox setTrackP;
    private javax.swing.JSlider setWidth;
    private javax.swing.JTabbedPane stabbedPain;
    private javax.swing.JButton startEditor;
    private javax.swing.JPanel startGame;
    private javax.swing.JLabel title_L;
    private javax.swing.JLabel widthL;
    private javax.swing.JLabel width_L;
    private javax.swing.JLabel winnerL;
    // End of variables declaration//GEN-END:variables

    private void refreshLoader() {
        File dir = new File("tracks");
            File[] files =
            dir.listFiles(new FilenameFilter() {
                    @Override
                    public boolean accept(File dir, String filename)
                        { return filename.endsWith(".carr"); }
            } );

        setTrackP.removeAllItems();
        setTrackE.removeAllItems();

        for(int i=0; i<files.length; i++){
            String fname = files[i].getName();
            int namesize = fname.length();

            setTrackP.addItem(fname.substring(0, namesize - 5));
            setTrackE.addItem(fname.substring(0, namesize - 5));
        }
    }
}
